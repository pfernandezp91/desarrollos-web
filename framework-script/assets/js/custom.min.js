/*! ** ucol.mx - Base v1.1.0 */
//  ** Última modificación: '08-03-2023';

// Esperamos a que el DOM este cargado para ejecutar el código javascript de la página web (DOMContentLoaded)
window.addEventListener('load', function() {
  const baseUrl = window.location.protocol + '//' + window.location.hostname + (window.location.port ? ':' + window.location.port : '');
  const path = window.location.pathname;
  const basePath = baseUrl + path.substring(0, path.lastIndexOf('/') + 1);

  // Obtenemos el elemento con la clase "sidebar-left"
  var sidebar = document.querySelector('.sidebar-left');

  // Si el elemento con la clase "sidebar-left" no existe, buscamos el elemento con el id "sidebar"
  if (!sidebar) {
    sidebar = document.getElementById('sidebar');
  }

  // Obtenemos el elemento con el id "sidebar-toggle"
  var sidebarToggle = document.getElementById('sidebar-toggle');

  // Verificamos si el elemento sidebar existe
  if (sidebar) {
    // Generamos el evento resize para que se ejecute la función resizeSidebar
    resizeSidebar();
    // Agregamos el evento resize al objeto window para que se ejecute la función resizeSidebar cuando se cambie el tamaño de la ventana
    window.addEventListener('resize', resizeSidebar);
    // Agregamos el evento click al elemento con el id "sidebar-toggle" para que se ejecute la función toggleSidebar
    sidebarToggle.addEventListener('click', toggleSidebar);
  } else {
    // Si el elemento sidebar no existe, entonces ocultamos el elemento con el id "sidebar-toggle"
    sidebarToggle.style.display = 'none';
  }


  // Función para cambiar el tamaño del elemento con el id "sidebar" cuando el tamaño de la ventana sea menor a 767px
  function resizeSidebar() {
    sidebar.style.display = window.innerWidth < 767 ? 'none' : 'block';
  }

  // Función para mostrar u ocultar el elemento con el id "sidebar" cuando se de click en el elemento con el id "sidebar-toggle"
  function toggleSidebar() {
    sidebar.style.display = sidebar.style.display === 'none' ? 'block' : 'none';
  }

  // Función para crear el menú de la página web (createMenu)
  function createMenu(SITE_MENU, menuList) {
    // Recorremos el arreglo SITE_MENU
    SITE_MENU.forEach(function(item) {
      // Creamos el elemento li
      let li = document.createElement("li");
      // Creamos el elemento a
      let a = document.createElement("a");
      // Revisamos si el elemento tiene clases y las agregamos al elemento a
      if (item.class) {
        // Recorremos las clases del elemento y las agregamos al elemento a
        item.class.split(' ').forEach(function(cls) {
          // Agregamos la clase al elemento a
          a.classList.add(cls);
        });
      }
      // Creamos el elemento ul
      let subMenuUl = document.createElement("ul");

      // Creamos el elemento para el icono y lo agregamos a 'a' si es que existe
      if (item.icon) {
        let icon = document.createElement("i");
        item.icon.split(' ').forEach(function(cls) {
            icon.classList.add(cls);
        });
        icon.classList.add('me-2')
        a.appendChild(icon);
      } 
      // Revisamos si el elemento tiene clases y las agregamos al elemento a
      if (item.class) {
          // Recorremos las clases del elemento y las agregamos al elemento a
          item.class.split(' ').forEach(function(cls) {
              // Agregamos la clase al elemento a
              a.classList.add(cls);
          });
      }
      // Agregamos el texto del elemento a
      a.innerHTML += item.title;

      // Agregamos el atributo href al elemento a
      a.setAttribute("href", item.link);

      // Verificamos si el elemento tiene submenú
      if (item.subMenu) {
        // Agregamos las clases "nav-item" y "dropdown" al elemento li
        li.classList.add("nav-item", "dropdown");
        // Agregamos las clases "nav-link" y "dropdown-toggle" al elemento a
        a.classList.add("nav-link", "dropdown-toggle");
        // Agregamos los atributos id, role, data-bs-toggle, aria-bs-haspopup y aria-bs-expanded al elemento a
        a.setAttribute("id", "navbarDropdown");
        a.setAttribute("role", "button");
        a.setAttribute("data-bs-toggle", "dropdown");
        a.setAttribute("aria-bs-haspopup", "true");
        a.setAttribute("aria-expanded", "false");
        a.setAttribute("data-bs-auto-close", "outside");
        // Agregamos las clases "dropdown-menu" y "dropdown-menu-end" al elemento ul
        subMenuUl.classList.add("dropdown-menu");
        // Agregamos el atributo aria-bs-labelledby al elemento ul
        subMenuUl.setAttribute("aria-bs-labelledby", "navbarDropdown");
        // Creamos el submenú del elemento li actual (item) y lo agregamos al elemento ul (subMenuUl) actual (item) 
        createMenu(item.subMenu, subMenuUl);
        // Agregamos el elemento a y el elemento ul al elemento li
        li.appendChild(a);
        // Agregamos el evento mouseenter al elemento li para mostrar el submenú
        li.addEventListener('mouseenter', (event) => {
          event.target.querySelector('.dropdown-menu').classList.add('show');
          event.target.querySelector('.dropdown-toggle').classList.add('active');
        });
        // Agregamos el evento mouseleave al elemento li para ocultar el submenú
        li.addEventListener('mouseleave', (event) => {
          event.target.querySelector('.dropdown-menu').classList.remove('show');
          event.target.querySelector('.dropdown-toggle').classList.remove('active');
        });
        li.appendChild(subMenuUl);
      } else {
        // Agregamos las clases "nav-item" y "nav-link" al elemento li y a
        li.classList.add("nav-item");
        // Agregamos las clases "nav-link" al elemento a
        a.classList.add("nav-link");
        // Agregamos el elemento a al elemento li
        li.appendChild(a);
      }
      // Agregamos el elemento li al elemento ul (menuList)
      menuList.appendChild(li);
    });
  }
  // Obtenemos el elemento con el selector ".navbar-nav" y lo guardamos en la variable menuList
  let menuList = document.querySelector(".navbar-nav");
  // Creamos el menú de la página web
  if(SITE_MENU.length > 0) createMenu(SITE_MENU, menuList);

  function createSectionSuperior() {
    const sectionSuperior = document.querySelector('#seccion-superior');
    const slotSuperior = document.querySelector('slot[name="seccion-superior"]');
    if(slotSuperior !== null){
      sectionSuperior.appendChild(slotSuperior);
    }
  }
  createSectionSuperior();

  function createSidebarLeft(SITE_SIDEBAR, sidebarList) {
    const slotSidebarTop = document.querySelector('slot[name="sidebar-left-content-top"]');
    const slotSidebarBottom = document.querySelector('slot[name="sidebar-left-content-bottom"]');
    // Creamos el elemento ul con las clases "nav" y "nav-pills"
    let menuList = document.createElement("ul");
    menuList.classList.add("nav", "nav-pills", "flex-column", "row", "mb-3");
  
    // Recorremos el arreglo SITE_SIDEBAR
    SITE_SIDEBAR.forEach(function(item) {
      // Creamos el elemento li
      let li = document.createElement("li");
      // Creamos el elemento a
      let a = document.createElement("a");
      // Agregamos el texto del elemento a
      a.innerText = item.title;
      // Agregamos el atributo href al elemento a
      a.setAttribute("href", item.link);
      // Revisamos si el elemento tiene id y lo agregamos al elemento a
      if (item.id) {
        // Agregamos el id al elemento a
        a.id = item.id;
      }
      // Revisamos si el elemento tiene clases y las agregamos al elemento a
      if (item.class) {
        // Recorremos las clases del elemento y las agregamos al elemento a
        item.class.split(' ').forEach(function(cls) {
          // Agregamos la clase al elemento a
          a.classList.add(cls);
        });
      }
      // Revisamos si el elemento tiene name y la agregamos al elemento a
      if (item.name) {
        // Recorremos el name del elemento y las agregamos al elemento a
        a.setAttribute("name", item.name);
      }
      // Verificamos si el elemento tiene submenú
      if (item.subMenu) {
        // Agregamos las clases "nav-item" y "dropdown" al elemento li
        li.classList.add("nav-item", "dropdown", "px-0");
        // Agregamos las clases "nav-link" y "dropdown-toggle" al elemento a
        a.classList.add("nav-link", "dropdown-toggle");
        // Agregamos los atributos id, role, data-bs-toggle, aria-haspopup y aria-expanded al elemento a
        a.setAttribute("id", "navbarDropdown");
        a.setAttribute("role", "button");
        a.setAttribute("data-bs-toggle", "dropdown");
        a.setAttribute("aria-haspopup", "true");
        a.setAttribute("aria-expanded", "false");
        // Creamos el elemento ul con la clase "dropdown-menu"
        let subMenuUl = document.createElement("ul");
        subMenuUl.classList.add("dropdown-menu", "bg-light", "ps-4", "w-100");

        // Verificamos si el elemento tiene el atributo open
        if(item.open) {
          // Agregamos las clases "dropdown" y "show" al elemento li
          a.classList.add("dropdown", "show");
          // Agregamos la clase "show" al elemento ul
          subMenuUl.classList.add("show");
        }

        // Creamos el submenú del elemento li actual (item) y lo agregamos al elemento ul (subMenuUl) actual (item) 
        createMenu(item.subMenu, subMenuUl);
        // Agregamos el elemento a y el elemento ul al elemento li
        li.appendChild(a);
        li.appendChild(subMenuUl);
      } else {
        // Agregamos las clases "nav-item" y "nav-link" al elemento li y a
        li.classList.add("nav-item", "px-0");
        // Agregamos la clase "nav-link" al elemento a
        a.classList.add("nav-link");
        // Agregamos el elemento a al elemento li
        li.appendChild(a);
      }
      // Agregamos el elemento li al elemento ul (menuList)
      menuList.appendChild(li);
    });
    // Agregamos el elemento ul (menuList) al elemento sidebarList
    if(sidebarList != null) sidebarList.prepend(menuList);
    slotSidebarTop != null ? sidebarList.prepend(slotSidebarTop) : '';
    slotSidebarBottom != null ? sidebarList.append(slotSidebarBottom) : '';
  }
  // Obtenemos el elemento con el selector ".navbar-nav" y lo guardamos en la variable menuList
  let sidebarList = document.querySelector(".sidebar-left");
  // Creamos el menú de la página web
  if(SITE_SIDEBAR.length > 0) createSidebarLeft(SITE_SIDEBAR, sidebarList);

  // Función para crear el breadcrumb de la página web (breadcrumbNavigation)
  function breadcrumbNavigation(BREADCRUMB_SITE, breadcrumbList) {
    if(breadcrumbList===null) return;
    // Limpiamos el contenido del breadcrumb
    breadcrumbList.innerHTML = "";
    // Creamos mensaje de bienvenida del breadcrumb en el elemento li con el texto "Usted está en:"
    let initLi = document.createElement("li");
    initLi.classList.add("breadcrumb-item");
    initLi.innerHTML = `Usted está en:`;
    breadcrumbList.appendChild(initLi);
    // Creamos el elemento li para el primer elemento del breadcrumb (generalmente "Inicio")
    let homeLi = document.createElement("li");
    homeLi.classList.add("breadcrumb-item");
    homeLi.innerHTML = `<a href="${basePath}" class="text-decoration-hover">Inicio</a>`;
    breadcrumbList.appendChild(homeLi);
    // Recorremos el array de objetos
    BREADCRUMB_SITE.forEach(function(item) {
      // Creamos el elemento li para el elemento actual del breadcrumb
      let li = document.createElement("li");
      li.classList.add("breadcrumb-item");
      if (item.link) {
        // Si el elemento tiene una propiedad "link", creamos el elemento a correspondiente
        let a = document.createElement("a");
        a.setAttribute("href", basePath + item.link);
        a.classList.add("text-decoration-hover");  
        a.innerText = item.title;
        li.appendChild(a);
      } else {
        // Si el elemento no tiene una propiedad "link", solo agregamos el texto correspondiente al li
        li.innerText = item.title;
      }
      // Agregamos el elemento li al breadcrumb
      breadcrumbList.appendChild(li);
    });
  }
  // Obtenemos el elemento con el selector ".breadcrumb" y lo guardamos en la variable breadcrumbList
  let breadcrumbList = document.querySelector(".breadcrumb-nav");
  // Creamos el breadcrumb de la página web
  if(BREADCRUMB_SITE.length > 0) breadcrumbNavigation(BREADCRUMB_SITE, breadcrumbList);

  // Función para crear el breadcrumb de la página web (breadcrumbSessionApp)
  function breadcrumbSessionApp(BREADCRUMB_SESSION, breadcrumbSessionList) {
    // Limpiamos el contenido del breadcrumb
    breadcrumbSessionList.innerHTML = "";
    // Creamos mensaje de bienvenida del breadcrumb en el elemento li con el texto "Bienvenido(a):"
    let initLi = document.createElement("li");
    initLi.classList.add("breadcrumb-item");
    initLi.innerHTML = `Bienvenido(a):`;
    breadcrumbSessionList.appendChild(initLi);
    // Recorremos el array de objetos
    BREADCRUMB_SESSION.forEach(function(item) {
      // Creamos el elemento li para el elemento actual del breadcrumb
      let li = document.createElement("li");
      li.classList.add("breadcrumb-item");
      if (item.link) {
        // Si el elemento tiene una propiedad "link", creamos el elemento a correspondiente
        let a = document.createElement("a");
        a.setAttribute("href", item.link);
        a.classList.add("text-decoration-hover");  
        a.innerText = item.title;
        li.appendChild(a);
      } else if(item.tooltip){
        // Agregamos la clase "user-name" al primer elemento del breadcrumb
        li.classList.add("user-name");
        // Si el elemento tiene una propiedad "tooltip", creamos el elemento span correspondiente
        let span = document.createElement("span");
        // Agregamos la clase "d-block text-truncate" y el atributo "style" al primer elemento del breadcrumb
        span.classList.add("d-block", "text-truncate");
        // Agregamos el atributo "style" al primer elemento del breadcrumb para limitar el ancho del texto a 150px y evitar que se desborde del breadcrumb en pantallas pequeñas (móviles)
        span.setAttribute("style", "max-width: 150px;");
        // Agregamos los atributos para el tooltip del primer elemento del breadcrumb
        span.setAttribute("data-bs-toggle", "tooltip");
        // Agregamos el atributo "data-bs-placement" para indicar la posición del tooltip
        span.setAttribute("data-bs-placement", "top");
        // Agregamos el atributo "data-bs-custom-class" para indicar la clase personalizada del tooltip
        span.setAttribute("data-bs-custom-class", "custom-tooltip");
        // Agregamos el atributo "data-bs-title" para indicar que el tooltip
        span.setAttribute("data-bs-title", item.title);
        //Pinta el titulo del tooltip
        span.innerText = item.title;
        // Agregamos el elemento span al elemento li del breadcrumb
        li.appendChild(span);
      } else {
        // Si el elemento no tiene una propiedad "link", solo agregamos el texto correspondiente al li
        li.innerText = item.title;
      }
      // Agregamos el elemento li al breadcrumb
      breadcrumbSessionList.appendChild(li);
    });
  }
  // Obtenemos el elemento con el selector ".breadcrumb" y lo guardamos en la variable breadcrumbSessionList
  let breadcrumbSessionList = document.querySelector(".breadcrumb-session");
  // Creamos el breadcrumb de la página web
  if(BREADCRUMB_SESSION.length > 0) breadcrumbSessionApp(BREADCRUMB_SESSION, breadcrumbSessionList);

  // Código para cambiar el modo de la página web (lo que contenga la variable CONTAINER_MODE)
  if (CONTAINER_MODE !== undefined) {
    // Obtenemos el elemento con el id "content"
    var contentEl = document.querySelector('#content');
    // Verificamos si el elemento con el id "content" tiene la clase "container-fluid"
    if (contentEl.classList.contains('container-fluid')) {
      // Reemplazamos la clase "container-fluid" por la clase "container" o lo que contenga la variable CONTAINER_MODE
      contentEl.classList.replace('container-fluid', CONTAINER_MODE);
      // Verificamos si el elemento con el id "content" tiene la clase "container"
    } else if (contentEl.classList.contains('container')) {
      // No es necesario hacer nada, ya que la clase "container" o lo que contenga la variable CONTAINER_MODE ya está aplicada
    } else {
      // No se encontró ninguna clase "container-fluid" o "container", por lo que se agrega la clase "container" o lo que contenga la variable CONTAINER_MODE
      contentEl.classList.add(CONTAINER_MODE);
    }
  } 

  // apartado con los códigos que se utilizan para inicializar los scripts de Bootstrap
  
  // Buscamos todos los elementos con el atributo data-bs-toggle="tooltip" y los inicializamos con bootstrap
  const tooltipElements = document.querySelectorAll('[data-bs-toggle="tooltip"]');
  // Verificamos si se encontraron elementos con el atributo data-bs-toggle="tooltip"
  if (tooltipElements.length > 0) {
    // Inicializamos los tooltips con Bootstrap
    tooltipElements.forEach(tooltip => {
      new bootstrap.Tooltip(tooltip);
    });
  }

});